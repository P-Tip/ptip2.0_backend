name: Deploy to Amazon EC2

on:
  push:
    branches:
      - develop

env:
  AWS_REGION: ap-northeast-2
  PROJECT_NAME: ptip2.0
  S3_BUCKET_NAME: ${{ secrets.TEST_S3_BUCKET_NAME }}
  CODE_DEPLOY_APPLICATION_NAME: testptip-codedeploy-application
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: testptip-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate .env and application-prod.properties
        run: |
          echo "${{ secrets.TEST_ENV_FILE }}" > .env
          chmod +x ./generate-properties.sh
          ./generate-properties.sh

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --stacktrace --info

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Prepare deployment bundle
        run: |
          mkdir -p deploy/scripts
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp src/main/resources/application-prod.properties deploy/
          cp scripts/*.sh deploy/scripts/
          chmod +x deploy/scripts/*.sh

      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source ./deploy

      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip